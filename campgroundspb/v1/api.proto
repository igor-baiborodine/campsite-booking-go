syntax = "proto3";

package campgroundspb.v1;

import "buf/validate/validate.proto";

service CampgroundsService {
  rpc GetCampsites(GetCampsitesRequest) returns (GetCampsitesResponse) {}
  rpc CreateCampsite(CreateCampsiteRequest) returns (CreateCampsiteResponse) {}
  rpc GetBooking(GetBookingRequest) returns (GetBookingResponse) {}
  rpc CreateBooking(CreateBookingRequest) returns (CreateBookingResponse) {}
  rpc UpdateBooking(UpdateBookingRequest) returns (UpdateBookingResponse) {}
  rpc CancelBooking(CancelBookingRequest) returns (CancelBookingResponse) {}
  rpc GetVacantDates(GetVacantDatesRequest) returns (GetVacantDatesResponse) {}
}

message GetCampsitesRequest {}

message GetCampsitesResponse {
  repeated Campsite campsites = 1;
}

message CreateCampsiteRequest {
  string campsite_code = 1 [(buf.validate.field).string.min_len = 1];
  int32 capacity = 2 [(buf.validate.field).int32.gt = 0];
  bool drinking_water = 3;
  bool restrooms = 4;
  bool picnic_table = 5;
  bool fire_pit = 6;
}

message CreateCampsiteResponse {
  string campsite_id = 1;
}

message GetBookingRequest {
  string booking_id = 1 [(buf.validate.field).string.uuid = true];
}

message GetBookingResponse {
  Booking booking = 1;
}

message CreateBookingRequest {
  string campsite_id = 1 [(buf.validate.field).string.uuid = true];
  string email = 2 [(buf.validate.field).string.email = true];
  string full_name = 3 [(buf.validate.field).string.min_len = 1];
  string start_date = 4 [(buf.validate.field).string.pattern = "^\\d{4}-([0][1-9]|1[0-2])-([0][1-9]|[1-2]\\d|3[01])$"];
  string end_date = 5 [(buf.validate.field).string.pattern = "^\\d{4}-([0][1-9]|1[0-2])-([0][1-9]|[1-2]\\d|3[01])$"];
}

message CreateBookingResponse {
  string booking_id = 1;
}

message UpdateBookingRequest {
  Booking booking = 1;
}

message UpdateBookingResponse {}

message CancelBookingRequest {
  string booking_id = 1 [(buf.validate.field).string.uuid = true];
}

message CancelBookingResponse {}

message GetVacantDatesRequest {
  string campsite_id = 1 [(buf.validate.field).string.uuid = true];
  string start_date = 2 [(buf.validate.field).string.pattern = "^\\d{4}-([0][1-9]|1[0-2])-([0][1-9]|[1-2]\\d|3[01])$"];
  string end_date = 3 [(buf.validate.field).string.pattern = "^\\d{4}-([0][1-9]|1[0-2])-([0][1-9]|[1-2]\\d|3[01])$"];
}

message GetVacantDatesResponse {
  repeated string vacant_dates = 1;
}

message Campsite {
  // Unique identifier of campsite, must be in UUID format.
  string campsite_id = 1 [(buf.validate.field).string.uuid = true];
  // Unique code of campsite.
  string campsite_code = 2 [(buf.validate.field).string.min_len = 1];
  // Maximum number of people campsite can accommodate.
  int32 capacity = 3 [(buf.validate.field).int32.gt = 0];
  // Indicates if campsite has drinking water.
  bool drinking_water = 4;
  // Indicates if campsite has restrooms.
  bool restrooms = 5;
  // Indicates if campsite has a picnic table.
  bool picnic_table = 6;
  // Indicates if campsite has a fire pit.
  bool fire_pit = 7;
  // Indicates if campsite is active.
  bool active = 8;
}

message Booking {
  // Unique identifier of booking, must be in UUID format.
  string booking_id = 1 [(buf.validate.field).string.uuid = true];
  // Identifier of the campsite booked, must be in UUID format.
  string campsite_id = 2 [(buf.validate.field).string.uuid = true];
  // Email of person who made booking.
  string email = 3 [(buf.validate.field).string.email = true];
  // Full name of person who made booking.
  string full_name = 4 [(buf.validate.field).string.min_len = 1];
  // Start date of booking, must be in ISO-8601 format (YYYY-MM-DD).
  string start_date = 5 [(buf.validate.field).string.pattern = "^\\d{4}-([0][1-9]|1[0-2])-([0][1-9]|[1-2]\\d|3[01])$"];
  // End date of booking, must be in ISO-8601 format (YYYY-MM-DD).
  string end_date = 6 [(buf.validate.field).string.pattern = "^\\d{4}-([0][1-9]|1[0-2])-([0][1-9]|[1-2]\\d|3[01])$"];
  // Indicates if booking is active.
  bool active = 8;
  // Version of booking.
  int64 version = 9 [(buf.validate.field).int64.gt = 0];
}
